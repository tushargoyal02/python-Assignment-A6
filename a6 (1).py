# -*- coding: utf-8 -*-
"""a6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fF5qlG95ZaX5RkIJis2quMWTjeoqRK5a
"""

# conditional statement
# 3 variable => minimum value out of the same

# c logical
# conditional statement
if(False):
  print("hello")

x=10     # dynamic typed programming
if(False):
  print("hello")

x=8     # dynamic typed programming
# comparison   ,  > , >=, <=, !=, ==
if(x>=10):
  print("hello")
else:
  print("condition is false")

x=12
y=20

x>10 and  y>15

x=5
y=20
if(x>=10 and y>15):
  print("hello")
else:
  print("condition is false")

# 2 =? hey
# 5  hello
# bye
if(17%2==0):
  print("hey")
elif(17%5==0):
  print("hello")
else:
  print("bye")

'''
age>5  => Aadhar card
age>18 => aadhar card + pan link
'''

age=4
if(age>5):
  print("Aadhar card created")
  if(age>18):
    print("adhar and pan card is linked")
  else:
    print("PAN CARD NOT CREATED")
else:
  print("Age is small")

# python
# programming
# simple
# syntax
# dynamic typed
# open source
# datascience, cloud, developement, software, automation(selenium)
# testing

# python 3.8
x=10
print(type(x))

x="10"
print(type(x))

print("hey",end="-")
print("hello")

#if-else
# nested-if-else

# String indexing and slicing
# collection of character
#      -4-3-2-1
city="RAJASTHAN"
#     01234....

city="RAJASTHAN"
print( city[2] )

city="RAJASTHAN"
print( city[-4] )

# slicing [start:stoping:  [step=1 ] ]
city="RAJASTHAN"
print( city[0:4] )

city="RAJASTHAN"
print( city[2:5] )

city="RAJASTHAN"
print( city[2:5:1] )
# 2+1 => 3+1=> 4

city="RAJASTHAN"
print( city[2:] )

city="RAJASTHAN"
print( city[:4] )

city="RAJASTHAN"
print( city[0:4] )

city="RAJASTHAN"
print( city[0:4:2] )
#0 +2 => 2

city="RAJASTHAN"
print( city[2:7:3] )
#2+3=>5

city="RAJASTHAN"
print( city[0:4:-1] )
# 0 -1  => -1

city="RAJASTHAN"
print( city[0:4:-1] )
# 0 -1  => -1

city="RAJASTHAN"
print( city[-1:-3:-1] )
# -1 + -1  => -2

city="RAJASTHAN"
print( city[:] )

city="RAJASTHAN"
print( city[::-1] )

city="RAJASTHAN"
print( city[:] )

#arithmetic
# + - * / //, % , **

2**3

10/2

10//2  # floor

11/2+5-1

# comparison

# assignment operator
x=10
x=x+15         # x+=5
print(x)

y=6
y/=3 # y=y/3
print(y)
#+=,   **=  , %=

#logical opearator
# and  or not

# membership operator
# "Y" not in "yash"

9 in [10,20,30,9,4]

# 6th operator  identity operator
# to check whether a variable is a instance of class or not
# to check the memory address
x=10
type(x) is not str

# bitwise operator
# 0,1
# 8421   =>  0-15
#128 64 32 16      8421   =>  0-255

10 | 14

# number // 2**bit   ( right shift)
# left =>   number *  2**bit
#54 >>1
# 54  // 2**1
#  54 // 2  => 27

54>>1

# basic loops
# loops
# for loop
# for(int i=0; i<10;i++)
# range( start,stop, [step=1] )
for i in range(0,10):
  print(i)

for i in range(6,11,2):  #6+2
  print(i)

total=0

for i in range(1,11):
  total=total+1

print("total after:" ,total)

data="regex"
for i in data:
  print(i)

data="regexsoftware"
# range(0,10)
for i in range(0,len(data)):
  print(i,data[i])

data="regexsoftware"

for i in range(0,len(data)):
  if(data[i]=="a" or data[i]=="e" or data[i]=="i" or data[i]=="o" or data[i]=="u"):
    print(i,data[i])

data="regexsoftware"

for i in range(0,len(data)):
  if(data[i]=="a" or data[i]=="e" or data[i]=="i" or data[i]=="o" or data[i]=="u"):
    print(i,data[i])

# method 2
for i in range(0,len(data)):
  if(data[i] in "aeiou"):
    print(i,data[i])

for i in data:
  if(i in "aeiou"):
    print(i)

for i in range(0,len(data)):
  if(data[i] in "aeiou"):
    print(i,data[i])

count=0
for i in range(0,len(data)):
  if(data[i] not in "aeiou"):
    count=count+1

print("consonent:",count)

x="rajasthan"
for i in range(0,len(x)//2):
  print( x[i])

for i in range(1,5):
  if(i==2):
    continue
    print("######")
  else:
    print(i)


print("Outside loop")

num=7
a=0
for x in range(2,num):
  if(num%x==0):
    a=1
    break

if(a==1):
  print("Not a prime")
else:
  print("Prime number",num)

num=9

for x in range(2,num):
  if(num%x==0):
    print("Not a prime")
    break
else:
  print("Prime number")

# for i in range(1,5):
#   print(i)

# to find the starting 5 divisible by 3
i=1
while(i<5):
  print(i)
  i+=1

count=0
i=1
while(count <5):
  if(i%3==0):
    print("divisible by 3",i)
    count=count+1

  i=i+1